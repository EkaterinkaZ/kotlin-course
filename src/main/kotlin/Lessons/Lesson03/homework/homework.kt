package Stimmax.Lessons.Lesson3.homework

// 1. Название мероприятия (неизменяемая публичная переменная известная на момент написания)
val name: String = "Monster Hackaton"

// 2. Дата проведения (публичная переменная известная на момент написания, но может быть изменена из-за переноса)
var date: String = "11 ноября 2025"

// 3. Место проведения (публичная переменная известная на момент написания,
// но может быть изменена из-за переноса)
var place: String = "Minsk"

// 4. Подробный бюджет мероприятия, включая расходы на оборудование, кейтеринг и другие операционные расходы. (приватная неизменяемая переменная - её не должны увидеть и бюджет уже запланирован и утверждён и не должен изменяться)
private val budget: String = "подробная информация с перечислением поставщиков и сумм для внутреннего пользования"

// 5. Количество участников
var members: Int = 0

// 6. Длительность хакатона
val duration: Int = 3

// 7. Контактная информация и условия соглашений с поставщиками пищи, оборудования и других услуг.
private val contacts: String = "Contact information about food and equipment"

// 8. Текущее состояние хакатона (статус)
var eventStatus: String = "In expectation"

// 9. Список спонсоров
private val sponsors: String = "List of sponsors"

// 10. Бюджет мероприятия
private val totalBudget: Int = 10000

// 11. Текущий уровень доступа к интернету
var internetAccess: String = "Stabile"

// 12. Информация о транспортировке оборудования, распределении ресурсов и координации
// между различными командами поддержки.
private val logisticInformation: String = "Logistic's List"

// 13. Количество команд
var teamAmount: Int = 15

// 14. Перечень задач
val taskList: String = "List of tasks"

// 15. План эвакуации
val evacuationPlan: String = "Evacuation Plan"

// 16. Список доступного оборудования (всё, что выделено для использования на мероприятии)
val equipmentList: String = "Equipment List"

// 17. Список свободного оборудования (всё, что можно взять прямо сейчас и что не занято другими участниками)
var freeEquipment: String = "Free equipment"

// 18. График питания участников (зависит от поставщика питания, определяемого за неделю до начала)
// (публичная изменяемая переменная с отложенной инициализацией, так как на момент создания поставщик
// и график не известны)
lateinit var mealSchedule: String

// 19. План мероприятий на случай сбоев
val planB: String = "Second plan"

// 20. Список экспертов и жюри
var expertList: String = "Expert list"

// 21. Политика конфиденциальности
private val privacyPolicy: String = "Privacy Policy"

// 22. Приватные отзывы (фидбэк) участников и зрителей для анализа проблем.
private lateinit var feedback: String

// 23. Текущая температура в помещении
var currentTemperature: Int = 20

// 24. Данные мониторинга и анализ производительности сетевого оборудования и
// интернет-соединения для целей отладки своих приложений командами
var datamonitoring: String = "Monitoring data and analise equipment"

// 25. Регулятор скорости интернета (понижающий коэффициент, например 0.5)
val internetSpeedRegulation: String = "Internet speed regulation"

// 26. Уровень освещения
var lightLevel: Int = 98

// 27. Лог событий мероприятия
lateinit var eventLog: String

// 28. Возможность получения медицинской помощи прямо на мероприятии (да/нет)
val medicine: Boolean = true

// 29. Планы и процедуры для обеспечения безопасности мероприятия,
// включая планы эвакуации и протоколы чрезвычайных ситуаций.
val safetyPlan: String = "Safety Plan"

// 30. Регистрационный номер мероприятия
val registrationNumber: Int = 15

// 31. Максимально допустимый уровень шума в помещении хакатона.
val maxNoiseLevel: Int = 53

// 32. Индикатор превышения уровня шума в помещениях (превышен или не превышен в данный момент)
var noiseIndicator: Boolean = false

// 33. План взаимодействия с прессой
val pressPlan: String = "Press plan"

// 34. Детальная публичная информация о проектах каждой команды, сбор данных включает в себя
// компиляцию кода и сбор статистики прогона автоматизированных проверок.
lateinit var projectInformation: String

// 35. Статус получения всех необходимых разрешений для проведения мероприятия
var permissionStatus: String = "Accepted"

// 36. Индикатор доступности специализированного оборудования в данный момент (например,
// специальному оборудованию)
var indicatorEquipmentAccess: Boolean = false

// 37. Список партнеров мероприятия
val partnersList: String = "Partners List"

// 38. Отчет, включающий фотографии, видео и отзывы, генерируется и становится доступен после
// завершения мероприятия.
val report: String by lazy {
    ""
}

// 39. Внутренние правила распределения призов
var prizeRules: String = "Prize rules"

// 40. Список разыгрываемых призов
val wonPrizes: String = "Won prizes"

// 41. Контактная информация экстренных служб, медицинского персонала и других важных служб,
// для внутреннего пользования.
val emergencyContacts: String = "Emergency contacts"

// 42. Особые условия для участников с ограниченными возможностями
val specialConditions: String = "Special Conditions"

// 43. Общее настроение участников (определяется опросами)
var participantsMood: String = "General Participants Mood"

// 44. Подробный план хакатона, включающий время и содержание каждого сегмента,
// инициализируется непосредственно перед началом мероприятия, так как зависит от фактического
// состава команд и взятых в работу задач.
lateinit var hackatonPlan: String
// 45. Имя знаменитого специального гостя, которое будет объявлено за день до мероприятия,
// но в момент инициализации неизвестно.
var specialGuest: String = "Name of guest"

// 46. Максимальное количество людей, которое может вместить место проведения.
val maxQuantity: Int = 200

// 47. Количество часов, отведенное каждой команде для работы над проектом.
val teamHours: Int = 2